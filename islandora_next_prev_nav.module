<?php

function islandora_next_prev_nav_islandora_view_object_alter(&$object, &$rendered) {
  if (in_array('islandora:collectionCModel', $object->models)) {
    return;
  }
  else {
    $button = function($target_pid,$target_label,$direction_label){
      $string = "<div class='prevnext'><a href='/islandora/object/$target_pid'>"
          . "<figure>"
          . "<figcaption>$direction_label</figcaption>"
          . "<img typeof='foaf:Image' src='/islandora/object/$target_pid/datastream/TN/view' alt=$target_label>"
          . "</figure>"
          . "</a></div>";
      return $string;
    };

    $index = get_list_isMemberOf($object->id);
    $current_obj_index = function ($pid, $array) {
      foreach ($array as $key => $obj) {
        if ($obj['object']['value'] == $pid) {
          return $key;
        }
      }
    };

    $pos = $current_obj_index($object->id, $index);
    if (count($index) == 1) {
      return;
    }

    $btn_down = $pos > 0 ? $button($index[$pos - 1]['object']['value'],$index[$pos - 1]['label']['value'],'previous item') : '';
    $btn_up   = $pos < count($index) - 1 ? $button($index[$pos + 1]['object']['value'],$index[$pos + 1]['label']['value'],'next item') : '';

    $append   = function(&$item, $key) use($btn_up, $btn_down) {
      if ($key == '#markup') {
        $item .= $btn_down . $btn_up;
      }
    };
    array_walk_recursive($rendered, $append);
  }
}

//the bones of this function were lovingly stolen from https://github.com/jonathangreen for his work on islandora_solution_pack_compound
function get_list_isMemberOf($pid){
  $rels_predicate = variable_get('islandora_collection_object_relationship', 'isMemberOf');
  $objects = array();
  $connection = islandora_get_tuque_connection();
  $pid_parts = explode(":", $pid);
  $escaped_pid = str_replace(':', '_', $pid);
  if ($connection) {
    $query = <<<EOQ
  SELECT ?object ?label FROM <#ri>
  WHERE {
    ?object <fedora-model:label> ?label;
            <fedora-rels-ext:isMemberOfCollection> <info:fedora/$pid_parts[0]:collection>
  }
  ORDER BY ?label
EOQ;
 $results = $connection->repository->ri->sparqlQuery($query);
  }
 return $results;
}

?>
